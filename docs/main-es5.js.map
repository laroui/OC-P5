{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/order-confirmation/order-confirmation.component.ts","webpack:///src/app/order-confirmation/order-confirmation.component.html","webpack:///src/app/productsview/productsview.component.ts","webpack:///src/app/productsview/productsview.component.html","webpack:///src/app/single-productview/single-productview.component.ts","webpack:///src/app/single-productview/single-productview.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/services/camera-load.service.ts","webpack:///src/services/cart.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CartComponent","router","http","formBuilder","cartService","items","baseUrl","products","getItems","contact","group","firstname","required","minLength","lastname","email","adresse","ville","getTotal","form","api_URL","JSON","stringify","p","price","ind","r","_id","toString","push","contactz","value","myObj","post","toPromise","data","orderId","orderID","sessionStorage","setItem","postRequest","navigate","get","HeaderComponent","items_count","OrderConfirmationComponent","cart","getID","totalprice","clearCart","clear","ProductsviewComponent","stuffService","stuff","loading","stuffSub","stuff$","subscribe","getStuff","product","addToCart","name","SingleProductviewComponent","route","params","getThingById","thing","environment","production","bootstrapModule","err","console","error","cameraLoadService","next","emitStuff","log","param","reject","response","providedIn","CartService","localStorage","window","alert","splice","somme","entry","removeItem"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent } from './cart/cart.component'\nimport {SingleProductviewComponent} from './single-productview/single-productview.component'\nimport {OrderConfirmationComponent} from './order-confirmation/order-confirmation.component'\nimport {AppComponent} from './app.component'\nimport { ProductsviewComponent } from './productsview/productsview.component'\nconst routes: Routes = [{ path: 'home', pathMatch: 'full', component:ProductsviewComponent  },\n  { path :'' ,pathMatch : 'full' , component:ProductsviewComponent },\n  { path :'cart' ,pathMatch : 'full' , component:CartComponent },\n  {path: 'product/:id' , component:SingleProductviewComponent },\n  {path: 'order-confirmation' , component:OrderConfirmationComponent }\n\n  ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  implements OnDestroy , OnInit{\nngOnInit() {\n}\n\n  ngOnDestroy() {\n\n}\n\n\n  title = 'front';\n}\n","\n<!-- Toolbar -->\n<app-header></app-header>\n<!-- Toolbar -->\n\n\n<router-outlet>\n</router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport { ProductsviewComponent } from './productsview/productsview.component';\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport { CartComponent } from './cart/cart.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { SingleProductviewComponent } from './single-productview/single-productview.component';\nimport {FormBuilder, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\n\n@NgModule({\n  declarations: [\n\n    AppComponent,\n    HeaderComponent,\n    ProductsviewComponent,\n    CartComponent,\n    SingleProductviewComponent,\n    OrderConfirmationComponent,\n\n  ],\n  imports: [\n  ReactiveFormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule\n  ],\n  providers: [ FormBuilder],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CartService} from \"../../services/cart.service\";\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport {  Router } from '@angular/router';\nimport {environment} from \"../../environments/environment.prod\";\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  orderID:string;\n  items=[];\ncontact:FormGroup;\n  private baseUrl = environment.baseUrl;\n  constructor(private router:Router,\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    public cartService: CartService\n  ) { }\n  ngOnInit(): void {\n    this.items = this.cartService.getItems();\n    this.contact = this.formBuilder.group({\n      firstname: ['zzzeez', [Validators.required, Validators.minLength(5)]],\n      lastname: ['azeazea', [Validators.required]],\n      email: ['ffp@gfg.com', [Validators.required, Validators.email]],\n      adresse: ['qsdsd', [Validators.required]],\n       ville: ['qsdqsdqsd', [Validators.required]],\n\n    });\n  }\n  getTotal () {\n    return this.cartService.getTotal(this.items);\n  }\n\nproducts =this.cartService.items;\n  loading: boolean;\n  get firstname() {\n    return this.contact.get('firstname');\n  }\n  get lastname() {\n    return this.contact.get('lastname');\n  }\n  get email() {\n    return this.contact.get('email');\n  }\n  get ville() {\n    return this.contact.get('ville');\n  }\n  get adresse() {\n    return this.contact.get('adresse');\n  }\n  get zipcode() {\n    return this.contact.get('zipcode');\n  }\n  postRequest(form:FormGroup):any {\n    // POST call to API with Ajax and Fetch\n    let api_URL = this.baseUrl +\"order/\";\n    let products :any =  []; // products: [string]\n    products = JSON.stringify(this.items);\n    let p = [];\n    let price = 0;\n    for (var ind in this.items) {\n      price = price + this.items[ind].price;\n      let r= this.items[ind]._id.toString();\n      p.push(r);\n    }\n    //contactz componenent to match API naming\n\n    let contactz = { // contact {string}\n      \"lastName\": this.lastname.value ,\n      \"firstName\": this.firstname.value,\n      \"email\": this.email.value,\n      \"address\": this.adresse.value,\n      \"city\":this.ville.value\n    }\n    let myObj = { \"contact\":contactz, \"products\":p };\n    //appel vers L'api sur l'END /order\n    this.http.post(api_URL,myObj).toPromise().then((data:any) =>{\n      this.cartService.orderId=data.orderId.toString();\n      this.orderID=data.orderId.toString()\n      sessionStorage.setItem('data',data.orderId.toString())\n      sessionStorage.setItem('totalprice', price.toString())\n    })\n\n\n  };\n\n  onSubmit() {\n    this.postRequest(this.contact);\n    this.router.navigate(['/order-confirmation']);\n\n\n  }\n}\n\n\n\n\n\n\n\n\n","\n\n<mat-spinner  class=\"spinner\" *ngIf=\"loading\"></mat-spinner>\n<p class=\"text-center\" *ngIf=\"products.length <= 0 && !loading\">Votre panier est vide</p>\n<div class=\"stuff-grid\" *ngIf=\"products.length > 0\">\n\n  <div class=\"left-side col-sm\" [hidden]=\"products.length <1 \">\n    <h2 class=\"legend\">Récapitulatif de la commande </h2>\n    <table>\n      <thead>\n      <tr>\n        <th><mat-icon>camera_enhance</mat-icon></th>\n        <th>Produit</th>\n        <th><mat-icon>euro_symbol</mat-icon></th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let thing of products;  let i = index\">\n        <td> <img [src]=\"thing?.imageUrl\" alt=\" image du produit {{thing.name}}\" height=\"30px\" width=\"30px\"> </td>\n        <td>{{thing.name}}</td>\n        <td> {{ thing.price / 100 | currency:'EUR' }} </td>\n        <td> <button class=\"btn-primary\" (click)=\"this.cartService.RemoveFromCart(thing)\"> </button></td>\n      </tr>\n      </tbody>\n      <tfoot>\n      <tr>\n        <td></td>\n        <td>Total à payer</td>\n        <td> <span class=\"total-price\"> {{getTotal() }}€</span>  </td>\n      </tr>\n      </tfoot>\n\n    </table>\n\n\n  </div>\n\n\n  <div class=\"right-side col-sm\"  >\n    <form [formGroup]=\"contact\" (ngSubmit)=\"onSubmit()\" novalidate >\n      <div class=\"form-group\">\n      <fieldset>\n        <legend class=\"legend\">Coordonées </legend>\n\n      <label for=\"lastname\">Nom</label>\n      <input  type=\"text\" formControlName=\"lastname\" id=\"lastname\" class=\"form-control\"/>\n      <div *ngIf=\"lastname.touched && !lastname.valid\">Required</div>\n\n      <label for=\"firstname\">Prénom</label>\n      <input type=\"text\" formControlName=\"firstname\" id=\"firstname\"class=\"form-control\"/>\n      <div *ngIf=\"firstname.touched && !firstname.valid\">Required</div>\n\n      <label for=\"email\">Email</label>\n      <input formControlName=\"email\" id=\"email\" class=\"form-control\" />\n      <div *ngIf=\"email.touched &&!email.valid\">Invalid</div>\n\n      </fieldset>\n      <fieldset>\n        <legend class=\"legend\">Livraison </legend>\n      <label for=\"adresse\">Adresse</label>\n      <input formControlName=\"adresse\" id=\"adresse\"class=\"form-control\"/>\n      <div *ngIf=\"adresse.touched && !adresse.valid \">Invalide</div>\n\n      <label for=\"ville\">Ville</label>\n      <input formControlName=\"ville\" id=\"ville\"class=\"form-control\"/>\n      <div *ngIf=\"ville.touched && !ville.value \">Invalide</div>\n      </fieldset>\n      </div>\n\n      <button class=\" btn btn-success\" type=\"submit\" [disabled]=\"!contact.valid\">Procéder au paiement</button>\n\n    </form>\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {CartService} from \"../../services/cart.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public cartService: CartService) {\n    this.items=cartService.items_count;\n\n  }\n\n  ngOnInit(): void {\n  }\n\nitems:any;\n\n getitems(){\n   return this.items;\n }\n}\n","<mat-toolbar color=\"primary\" class=\"nav\">\n  <a routerLink=\"/home\" class=\"home-button\"> <img src=\"./assets/img/orinoco-logo-tp.png\" class=\"ori-icon\">\n\n  </a>\n\n\n  <a routerLink=\"/cart\" class=\"button fancy-button\">\n    <i class=\"material-icons\">shopping_cart  </i>  <span class=\"counter\"> {{this.cartService.items_count | number }}</span>   ¨Panier\n  </a>\n\n</mat-toolbar>\n","import { Component, OnInit ,OnDestroy , Input } from '@angular/core';\nimport {toNumbers} from \"@angular/compiler-cli/src/diagnostics/typescript_version\";\nimport {CartService} from '../../services/cart.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.scss']\n\n})\n\nexport class OrderConfirmationComponent implements OnInit, OnDestroy {\n totalprice:any;\n orderId:string;\n\n  constructor(private router:Router,\n              public cart:CartService) {\nthis.orderId=cart.getID();\n  this.totalprice=cart.getTotal(cart.items);\n\n\n\n\n  }\nclear(){\n  this.cart.clearCart();\n  this.router.navigate(['/']);\n}\n  ngOnInit(): void {\n  //reset de l'espace de stockage :)\n\n\n  }\n  ngOnDestroy() {\n\n\n\n\n  }\n\n\n}\n","\n<main class=\"main\">\n\n  <!-- BANNER -->\n  <div class=\"banner\">\n    <div class=\"banner-title\">\n\n\n      <p class=\"h7\">Une sélection de matériel et d'accessoire pour photographe.</p>\n    </div>\n    <img src=\"./assets/img/orinoco-logo-tp.png\" class=\"banner-img\" height=\"100\" alt=\"Oricono est un site de vente en ligne proposant une sélection de matériel et d'accessoire pour photographe.\">\n  </div>\n\n  <!-- ORDER CONFIRMATION -->\n  <section>\n    <div class=\"order-confirm\">\n      <h2>L'équipe d'Oricono vous remerci pour votre commande !</h2>\n      <div class=\"order-confirm_text\">\n        <h3>Votre commande a bien été validée</h3>\n        <p>Votre commande d'un montant de <span class=\"font-weight-bold\">{{this.totalprice}}</span> a bien été validée.<br>\n        <p>numéro de commande : <span class=\"font-weight-bold \">{{ this.cart.orderId  }}€</span></p>\n        <p>\n          Toute l'équipe vous remercie pour votre confiance ; nous restons à votre disposition en cas de besoin.\n        </p>\n\n        <button class=\"btn\" id=\"btn-return-home\" (click)=\"clear()\" aria-label=\"Retourner vers la page d'accueil d'Oricono\">Revenir à l'accueil\n        </button>\n      </div>\n    </div>\n  </section>\n\n  <span class=\"end-text_confirm\">L'équipe d'Oricono vous remercie pour votre confiance !</span>\n\n  <!-- FOOTER -->\n  <footer class=\"footer\">\n    <p>Copyright © 2020 - Oricono</p>\n  </footer>\n\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {CartService} from '../../services/cart.service'\nimport {cameraLoadService} from '../../services/camera-load.service'\nimport {CameraModel} from \"../../models/camera.model\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-productsview',\n  templateUrl: './productsview.component.html',\n  styleUrls: ['./productsview.component.scss']\n})\nexport class ProductsviewComponent implements OnInit {\n\n  public stuff: CameraModel[] = [];\n  public part: number;\n  public loading: boolean;\n\n  private stuffSub: Subscription;\n  private partSub: Subscription;\n  chosenId: string;\n\n  constructor(private cartService :CartService,\n              private router: Router,\n              private stuffService: cameraLoadService ) {}\n\n  ngOnInit() {\n\n    this.loading = true;\n    this.stuffSub = this.stuffService.stuff$.subscribe(\n      (stuff) => {\n        this.stuff = stuff;\n        this.loading = false;\n      }\n    );\n\n    this.stuffService.getStuff();\n  }\n\n\n  addToCart(product: any) {\n   this.cartService.addToCart(product);\n  }\n\n  onProductClicked(name: string) {\n\n      this.router.navigate(['/product/' + name]);\n    }\n}\n","\n<mat-spinner  class=\"spinner\" *ngIf=\"loading\"></mat-spinner>\n<p class=\"text-center\" *ngIf=\"stuff.length <= 0 && !loading\">Rien à vendre !</p>\n<div class=\"stuff-grid\" *ngIf=\"stuff.length >= 0\">\n\n  <div class=\"thing-pane\"\n       *ngFor=\"let thing of stuff\"\n       [ngStyle]=\"{'background-image': 'url(' + thing.imageUrl + ')'}\">\n\n    <div class=\"thing-info\">\n      <h3>\n        {{ thing.name }}\n      </h3>\n      <h5>{{ thing.price / 100 | currency:'EUR' }}</h5>\n      <a routerLink=\"/product/{{thing._id}}\" aria-label=\"icon button with a plus one icon\" class=\"add-button\" mat-raised-button color=\"accent\">\n        Details...\n      </a>\n    </div>\n\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {cameraLoadService} from \"../../services/camera-load.service\";\nimport {CartService} from \"../../services/cart.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport {CameraModel} from '../../models/camera.model'\n\n@Component({\n  selector: 'app-single-productview',\n  templateUrl: './single-productview.component.html',\n  styleUrls: ['./single-productview.component.scss']\n})\nexport class SingleProductviewComponent implements OnInit {\n  thing: any;\n  loading: boolean;\n\n  constructor(private stuffService: cameraLoadService,\n             private cartService: CartService,\n              private router: Router,\n              private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.stuffService.getThingById(params.id).then(\n          (thing: CameraModel) => {\n            this.loading = false;\n            this.thing = thing;\n          }\n        );\n      }\n    );\n\n  }\n\n  addToCart(product: any) {\n    this.cartService.addToCart(product);\n  }\n\n\n}\n","<div class=\"spacer\"></div>\n<mat-spinner *ngIf=\"loading\"></mat-spinner>\n<div *ngIf=\"!loading\">\n  <div class=\"single-thing-pane\">\n    <img class=\"single-thing-image\" [src]=\"thing?.imageUrl\" alt=\" image du produit {{thing.name}}\">\n    <div class=\"single-thing-info\">\n      <h1>{{ thing?.title }}</h1>\n      <p>{{ thing?.description }}</p>\n      <h2 class=\"single-thing-price\">{{ thing?.price / 100 | currency:'EUR' }}</h2>\n      <div class=\"form-group\">\n        <label for=\"sel1\">Select list (select one):</label>\n        <select  class=\"form-control\" id=\"sel1\">\n          <option *ngFor=\"let opt of thing?.lenses\">{{opt}}</option>\n        </select>\n      </div>\n      <button class=\"btn btn-primary\"  (click)=\"addToCart(thing)\"> Ajouter au panier </button>\n\n\n    </div>\n  </div>\n</div>\n","export const environment = {\n  production: true,\n  baseUrl: 'https://oriapi.herokuapp.com/api/cameras/'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CameraModel } from '../models/camera.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../environments/environment.prod'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class cameraLoadService {\r\n  private baseUrl = environment.baseUrl;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private stuff: CameraModel[] = [\r\n\r\n  ];\r\n  public stuff$ = new Subject<CameraModel[]>();\r\n  emitStuff() {\r\n    this.stuff$.next(this.stuff);\r\n  }\r\n\r\n  getStuff () {\r\n    this.http.get(this.baseUrl).subscribe(\r\n      (stuff: CameraModel[]) => {\r\n        if (stuff) {\r\n          this.stuff = stuff;\r\n          this.emitStuff();\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  subscribe(param: (stuff) => void) {\r\n    return this.getStuff();\r\n  }\r\n  getThingById(id: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(this.baseUrl + id).subscribe(\r\n        (response) => {\r\n          resolve(response);\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CartService {\r\n\r\n  constructor() {\r\n\r\n  }\r\n  orderId:string;\r\n  totalprice:any;\r\n  items = [];\r\n  items_count=0;\r\n  addToCart(product) {\r\n    this.items.push(product);\r\n    localStorage.setItem('panier', JSON.stringify(this.items));\r\n    this.items_count=this.items_count +1;\r\n    window.alert('Your product has been added to the cart!'+ this.items_count);\r\n\r\n  }\r\n  RemoveFromCart(product) {\r\n    console.log('before delete'+this.items_count);\r\n\r\n    this.items.splice(product.id,1);\r\n    console.log(this.items_count);\r\n    localStorage.setItem('panier', JSON.stringify(this.items));\r\n    this.items_count=this.items_count -1;\r\n    window.alert('Your product has been removed from the cart!'+ this.items_count);\r\n\r\n  }\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  getTotal (items) {\r\n    let somme = 0;\r\n    for (let entry of items) {\r\n      somme = somme +entry.price ;\r\n    }\r\n    return somme / 100;\r\n\r\n\r\n}\r\n  clearCart() {\r\n    localStorage.clear();\r\n    localStorage.removeItem('data');\r\n    localStorage.removeItem('totalprice');\r\n    this.items = [];\r\n\r\n\r\n    return this.items;\r\n  }\r\ngetID(){\r\n    return this.orderId;\r\n}\r\n\r\n}\r\n\r\n"]}